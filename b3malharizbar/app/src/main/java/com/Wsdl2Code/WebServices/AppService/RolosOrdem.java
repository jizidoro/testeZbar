package com.Wsdl2Code.WebServices.AppService;

//------------------------------------------------------------------------------
// <wsdl2code-generated>
//    This code was generated by http://www.wsdl2code.com version  2.6
//
// Date Of Creation: 4/26/2018 6:37:04 PM
//    Please dont change this code, regeneration will override your changes
//</wsdl2code-generated>
//
//------------------------------------------------------------------------------
//
//This source code was auto-generated by Wsdl2Code  Version
//
import org.ksoap2.serialization.KvmSerializable;
import org.ksoap2.serialization.PropertyInfo;
import java.util.Hashtable;
import org.ksoap2.serialization.SoapObject;
import org.ksoap2.serialization.SoapPrimitive;

public class RolosOrdem implements KvmSerializable {
    
    public String codItem;
    public String numLote;
    public String numPeca;
    public String local;
    public String endereco;
    public String permiteSubstituir;
    
    public RolosOrdem(){}
    
    public RolosOrdem(SoapObject soapObject)
    {
        if (soapObject == null)
            return;
        if (soapObject.hasProperty("CodItem"))
        {
            Object obj = soapObject.getProperty("CodItem");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                codItem = j.toString();
            }else if (obj!= null && obj instanceof String){
                codItem = (String) obj;
            }
        }
        if (soapObject.hasProperty("NumLote"))
        {
            Object obj = soapObject.getProperty("NumLote");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                numLote = j.toString();
            }else if (obj!= null && obj instanceof String){
                numLote = (String) obj;
            }
        }
        if (soapObject.hasProperty("NumPeca"))
        {
            Object obj = soapObject.getProperty("NumPeca");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                numPeca = j.toString();
            }else if (obj!= null && obj instanceof String){
                numPeca = (String) obj;
            }
        }
        if (soapObject.hasProperty("Local"))
        {
            Object obj = soapObject.getProperty("Local");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                local = j.toString();
            }else if (obj!= null && obj instanceof String){
                local = (String) obj;
            }
        }
        if (soapObject.hasProperty("Endereco"))
        {
            Object obj = soapObject.getProperty("Endereco");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                endereco = j.toString();
            }else if (obj!= null && obj instanceof String){
                endereco = (String) obj;
            }
        }
        if (soapObject.hasProperty("PermiteSubstituir"))
        {
            Object obj = soapObject.getProperty("PermiteSubstituir");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                permiteSubstituir = j.toString();
            }else if (obj!= null && obj instanceof String){
                permiteSubstituir = (String) obj;
            }
        }
    }
    @Override
    public Object getProperty(int arg0) {
        switch(arg0){
            case 0:
                return codItem;
            case 1:
                return numLote;
            case 2:
                return numPeca;
            case 3:
                return local;
            case 4:
                return endereco;
            case 5:
                return permiteSubstituir;
        }
        return null;
    }
    
    @Override
    public int getPropertyCount() {
        return 6;
    }
    
    @Override
    public void getPropertyInfo(int index, @SuppressWarnings("rawtypes") Hashtable arg1, PropertyInfo info) {
        switch(index){
            case 0:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "CodItem";
                break;
            case 1:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "NumLote";
                break;
            case 2:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "NumPeca";
                break;
            case 3:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "Local";
                break;
            case 4:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "Endereco";
                break;
            case 5:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "PermiteSubstituir";
                break;
        }
    }
    

    @Override
    public void setProperty(int arg0, Object arg1) {
    }
    
}
